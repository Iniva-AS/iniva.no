---
// Newsletter subscription component
---

<div class="bg-white py-16 sm:py-24">
  <div class="mx-auto max-w-7xl sm:px-6 lg:px-8">
    <div class="relative isolate flex flex-col gap-10 overflow-hidden bg-gray-900 px-6 py-24 shadow-2xl sm:rounded-3xl sm:px-24 xl:flex-row xl:items-center xl:py-32">
      <h2 class="max-w-xl text-3xl font-semibold tracking-tight text-balance text-white sm:text-4xl xl:flex-auto">Vil du ha produktoppdateringer? Meld deg på nyhetsbrevet vårt.</h2>
      <form data-newsletter-form class="w-full max-w-md">
        <div class="flex gap-x-4">
          <label for="email-address" class="sr-only">E-postadresse</label>
          <input
            id="email-address"
            type="email"
            name="email"
            required
            placeholder="Skriv inn e-posten din"
            autocomplete="email"
            data-newsletter-input
            class="min-w-0 flex-auto rounded-md bg-white/5 px-3.5 py-2 text-base text-white outline outline-1 -outline-offset-1 outline-white/10 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-500 sm:text-sm/6"
          />
          <button
            type="submit"
            data-newsletter-button
            class="flex-none rounded-md bg-white px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-xs hover:bg-gray-100 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-white"
          >
            Varsle meg
          </button>
        </div>
        <p class="mt-4 text-sm/6 text-gray-300">
          Vi bryr oss om dataene dine. Les vår
          <a href="/personvern" class="font-semibold whitespace-nowrap text-white hover:text-gray-100">personvernerklæring</a>.
        </p>
        <div data-newsletter-message class="mt-4 text-sm font-medium"></div>
      </form>
      <svg viewBox="0 0 1024 1024" aria-hidden="true" class="absolute top-1/2 left-1/2 -z-10 size-[64rem] -translate-x-1/2">
        <circle r="512" cx="512" cy="512" fill="url(#759c1415-0410-454c-8f7c-9a820de03641)" fill-opacity="0.7" />
        <defs>
          <radialGradient id="759c1415-0410-454c-8f7c-9a820de03641" r="1" cx="0" cy="0" gradientUnits="userSpaceOnUse" gradientTransform="translate(512 512) rotate(90) scale(512)">
            <stop stop-color="#7775D6" />
            <stop offset="1" stop-color="#E935C1" stop-opacity="0" />
          </radialGradient>
        </defs>
      </svg>
    </div>
  </div>
</div>

<script>
  const form = document.querySelector('[data-newsletter-form]') as HTMLFormElement;
  const input = document.querySelector('[data-newsletter-input]') as HTMLInputElement;
  const button = document.querySelector('[data-newsletter-button]') as HTMLButtonElement;
  const messageEl = document.querySelector('[data-newsletter-message]') as HTMLDivElement;

  if (form && input && button && messageEl) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const email = input.value.trim();

      if (!email) {
        showMessage('Vennligst skriv inn e-postadressen din', 'error');
        return;
      }

      // Set loading state
      button.disabled = true;
      const originalButtonText = button.textContent;
      button.textContent = 'Melder på...';
      messageEl.textContent = '';

      try {
        const response = await fetch('/api/newsletter', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email }),
        });

        const data = await response.json();

        if (response.ok) {
          showMessage(data.message || 'Meldingen din er registrert!', 'success');
          input.value = '';
        } else {
          showMessage(data.message || 'Kunne ikke melde på. Vennligst prøv igjen.', 'error');
        }
      } catch (error) {
        showMessage('Nettverksfeil. Vennligst prøv igjen senere.', 'error');
      } finally {
        // Reset button state
        button.disabled = false;
        button.textContent = originalButtonText;
      }
    });
  }

  function showMessage(message: string, type: 'success' | 'error') {
    if (messageEl) {
      messageEl.textContent = message;
      messageEl.className = `mt-4 text-sm font-medium ${
        type === 'success' ? 'text-green-600' : 'text-red-600'
      }`;
    }
  }
</script>

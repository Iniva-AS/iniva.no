---
interface BreadcrumbItem {
  label: string;
  href: string;
  current?: boolean;
}

interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

<nav aria-label="Breadcrumb" class="mx-auto max-w-7xl px-6 pt-24 pb-8 lg:px-8">
  <ol role="list" class="flex items-center space-x-4">
    {items.map((item, index) => (
      <li>
        {index === 0 ? (
          <div>
            <a href={item.href} class="text-gray-400 hover:text-gray-500">
              <svg viewBox="0 0 20 20" fill="currentColor" data-slot="icon" aria-hidden="true" class="size-5 shrink-0">
                <path d="M9.293 2.293a1 1 0 0 1 1.414 0l7 7A1 1 0 0 1 17 11h-1v6a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6H3a1 1 0 0 1-.707-1.707l7-7Z" clip-rule="evenodd" fill-rule="evenodd" />
              </svg>
              <span class="sr-only">{item.label}</span>
            </a>
          </div>
        ) : (
          <div class="flex items-center">
            <svg viewBox="0 0 20 20" fill="currentColor" data-slot="icon" aria-hidden="true" class="size-5 shrink-0 text-gray-400">
              <path d="M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" fill-rule="evenodd" />
            </svg>
            <a
              href={item.href}
              aria-current={item.current ? 'page' : undefined}
              class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"
            >
              {item.label}
            </a>
          </div>
        )}
      </li>
    ))}
  </ol>
</nav>
